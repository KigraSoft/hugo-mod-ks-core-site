// Kigra Core Site SASS Base Config
//
// Version 0.3 - 2024-07
//
// _reset.scss
//
// Part of standard set of SASS base config being used across the
// Kigra Enterprise websites.
//
// Standard set of SASS utils being used in the Kigra Core Site SASS Base Config
//
// In a good failure to document fashion, I don't necessariy remember the
// intended purpose of each.  Working on that...
//
$bp: (
    mobile: 480px,
    tablet: 768px,
    desktop: 1440px,
);

@mixin query($display) {
    @each $key, $value in $bp {
	@if ($display == $key) {
	    @media (max-width: $value) {@content;}
	}
    }
}

// https://www.smashingmagazine.com/2016/05/fluid-typography/
// font-size formula: 
// min_fnt_sz_px + (max_fnt_sz - min_fnt_sz) * (100vw - min_scn_sz_px) / (max_scn_sz - min_scn_sz) );
// eg: 16px + (24 - 16) * (100vw - 400px) / (800 - 400) );
//
// mixin:
// https://www.sassmeister.com/gist/7f22e44ace49b5124eec

@mixin fluid-size($properties, $min-width, $max-width, $min-value, $max-value) {
    @each $property in $properties {
	#{$property}: $min-value;
    }

    @media (min-width: $min-width) {
	@each $property in $properties {
	    #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)});
	}
    }
    @media (min-width: $max-width) {
	@each $property in $properties {
	    #{$property}: $max-value;
	}
    }
}

@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
	@return $number / ($number * 0 + 1);
    }

    @return $number;
}
